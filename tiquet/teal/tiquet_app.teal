#pragma version 4

///////////////////////
// Application Entry //
///////////////////////

// Application creation.
txn ApplicationID
int 0
==
// Create tiquet when application is created. 
bnz tiquet_creation
// Opt-in to application. 
txn OnCompletion
int OptIn
==
bnz optin_app
// Application call. 
txn OnCompletion
int NoOp
==
bnz tiquet
txn OnCompletion
int CloseOut
==
bnz closeout_app
txn OnCompletion
int UpdateApplication
==
bnz update_app
txn OnCompletion
int DeleteApplication
==
bnz delete_app
// TODO: Handle other application ops.
b failure

/////////////////////
// Tiquet Creation //
/////////////////////

tiquet_creation:
// Set tiquet price.
byte "PRICE"
int {{TIQUET_PRICE}}
app_global_put
// Set tiquet issuer royalty parameters.
byte "ROYALTY_NUMERATOR"
int {{ROYALTY_NUMERATOR}}
app_global_put
byte "ROYALTY_DENOMINATOR"
int {{ROYALTY_DENOMINATOR}}
app_global_put
// Indicate tiquet is for sale by setting "for sale" flag to true. 
byte "FOR_SALE"
int 1
app_global_put
b success

/////////////
// Opt-In  //
/////////////

optin_app:
b success

//////////////////////
// Application Call //
//////////////////////

tiquet:
gtxn 0 NumAppArgs
int 1
>=
bz failure
gtxna 0 ApplicationArgs 0
byte "POST_FOR_RESALE"
==
bnz post_for_resale
gtxna 0 ApplicationArgs 0
byte "SALE"
==
bnz sale
gtxna 0 ApplicationArgs 0
byte "STORE_ESCROW_ADDRESS"
==
bnz store_escrow_address
b failure

/////////////////////
// Post for Resale //
/////////////////////

post_for_resale:
// 0th-index value into accounts array, i.e. caller's address. 
int 0
int {{TIQUET_ID}}
asset_holding_get AssetBalance
store 0
store 1
load 0
// Fail if the caller doesn't own the TASA.
bz failure
byte "FOR_SALE"
int 1
app_global_put
byte "PRICE"
txna ApplicationArgs 1
btoi
app_global_put
b success

///////////
// Sale  //
///////////

// Handles both Initial Sale and Resale.
sale:
byte "FOR_SALE"
app_global_get
int 0
>
global GroupSize
int 4
>=
&&
gtxn 0 TypeEnum
int appl
==
&&
gtxn 1 TypeEnum
int axfer
==
&&
byte "ESCROW_ADDRESS"
app_global_get
gtxn 1 Sender
==
&&
gtxn 2 TypeEnum
int pay
==
&&
gtxn 2 Receiver
int {{TIQUET_ID}}
asset_holding_get AssetBalance
store 0
store 1
load 0
&&
byte "PRICE"
app_global_get
gtxn 2 Amount
==
&&
gtxn 3 TypeEnum
int pay
==
&&
byte "PRICE"
app_global_get
int {{CONSTANTS_APP_ID}}
byte "PROCESSING_FEE_NUMERATOR"
app_global_get_ex
pop
*
int {{CONSTANTS_APP_ID}}
byte "PROCESSING_FEE_DENOMINATOR"
app_global_get_ex
pop
/
gtxn 3 Amount
==
&&
store 0
global GroupSize
int 4
==
bnz finish_sale
global GroupSize
int 5
==
bnz finish_resale
b failure

finish_resale:
load 0
gtxn 4 TypeEnum
int pay
==
&&
byte "PRICE"
app_global_get
byte "ROYALTY_NUMERATOR"
app_global_get
*
byte "ROYALTY_DENOMINATOR"
app_global_get
/
gtxn 4 Amount
==
&&
store 0
b finish_sale

finish_sale:
load 0
byte "FOR_SALE"
int 0
app_global_put
bnz success
b failure

///////////////////////////
// Store Escrow Address  //
///////////////////////////

store_escrow_address:
byte "ESCROW_ADDRESS"
gtxna 0 ApplicationArgs 1
app_global_put
b success

///////////////////////////
// Closeout Application  //
///////////////////////////

closeout_app:
b success

//////////////////////////////////
// Update / Delete Application  //
//////////////////////////////////

update_app:
delete_app:
// Only the tiquet issuer or tiquet.io are allowed to update.
addr {{ISSUER_ADDRESS}}
txn Sender
==
addr {{TIQUET_IO_ADDRESS}}
txn Sender
==
||
bnz success
b failure

/////////////////////
// Application End //
/////////////////////

success:
int 1
return
b end_tiquet_app

failure:
int 0
return
b end_tiquet_app

end_tiquet_app:
